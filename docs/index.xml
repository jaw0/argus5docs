<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Argus Monitoring</title>
    <link>http://example.org/</link>
    <description>Recent content on Argus Monitoring</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 22 Oct 2017 16:12:54 -0400</lastBuildDate>
    
	<atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Download</title>
      <link>http://example.org/docs/download/</link>
      <pubDate>Sun, 22 Oct 2017 16:12:54 -0400</pubDate>
      
      <guid>http://example.org/docs/download/</guid>
      <description>Argus can be downloaded from:
 http://argus.tcp4me.com/download.html https://github.com/jaw0/argus5  </description>
    </item>
    
    <item>
      <title>Install</title>
      <link>http://example.org/docs/install/</link>
      <pubDate>Sun, 22 Oct 2017 16:12:54 -0400</pubDate>
      
      <guid>http://example.org/docs/install/</guid>
      <description>Verify that you have the prerequisites installed  sendmail and qpage are recommended. either or both can be used to send notifications.  Find sendmail at www.sendmail.org Find qpage at www.qpage.org Note: this does not need to be the real sendmail, as long as it looks and smells like sendmail. ie. qmail&amp;rsquo;s sendmail compatible sendmail program will be just fine.  fping is used by the Ping Monitoring module for ping tests.</description>
    </item>
    
    <item>
      <title>Configuring</title>
      <link>http://example.org/docs/config/</link>
      <pubDate>Thu, 28 Dec 2017 11:11:33 -0500</pubDate>
      
      <guid>http://example.org/docs/config/</guid>
      <description>Typically, when running argus, you will have 2 types of config files: one to configure various aspects of argus itself, and one (often a directory of several files) to configure what argus should monitor.</description>
    </item>
    
    <item>
      <title>Argus Conf</title>
      <link>http://example.org/docs/argusconf/</link>
      <pubDate>Thu, 28 Dec 2017 11:11:33 -0500</pubDate>
      
      <guid>http://example.org/docs/argusconf/</guid>
      <description>This file is passed to argus on the command line argusd -c /path/argus.conf and controls various aspects of argus itself. In prior versions of argus, many of these parameters were specified some other way.
The file consists of parameters and values, and may contain comments by using &amp;lsquo;#&amp;rsquo;: All parameters have default values and may be ommited.
 # send messages to syslog (highly recommended) syslog local1 ################################################################ # where can argus find things?</description>
    </item>
    
    <item>
      <title>Config File</title>
      <link>http://example.org/docs/configfile/</link>
      <pubDate>Mon, 23 Oct 2017 12:56:05 -0400</pubDate>
      
      <guid>http://example.org/docs/configfile/</guid>
      <description>You have the choice of creating a single config file, or a directory of separate config files, which are effectively concatenated together.
The latter is useful so that different parts can be generated by different people or different scripts.
For example, the author has one file for each of: unix servers, NT servers, routers, terminal servers, BGP sessions, T1 connections, DSL connections, etc. Certain files are built by scripts from various databases, and others are maintained by people.</description>
    </item>
    
    <item>
      <title>Running Argus</title>
      <link>http://example.org/docs/running/</link>
      <pubDate>Mon, 01 Oct 2018 11:02:05 -0400</pubDate>
      
      <guid>http://example.org/docs/running/</guid>
      <description> Typically, argus started by running (as root)
argusd -c /path/to/config/file  Argus will read the specified config file, and run in the background.
Typically, the config file will specify a user and group for argus to switch to after starting.
Command Line options -c specify the config file -f run in the foreground -d enable all debugging -A run in agent mode using the specified cert -p use the specified tcp port in agent mode -s use the specified control socket  </description>
    </item>
    
    <item>
      <title>Users</title>
      <link>http://example.org/docs/users/</link>
      <pubDate>Tue, 02 Oct 2018 10:54:33 -0500</pubDate>
      
      <guid>http://example.org/docs/users/</guid>
      <description>The method of configuring users changed in version 5.0
 To control access, argus wants to know who is permitted to access what. Associated with every valid user is:
 username password home object (like a unix home directory) list of access control groups  Users are managed via argusctl
 argusctl listusers - list users argusctl getuser user=maggie - display user config argusctl setuser user=maggie &amp;hellip; - create or modify user argusctl deluser user=maggie - delete a user  Create a user:  argusctl setuser user=maggie pass=1234</description>
    </item>
    
    <item>
      <title>Services</title>
      <link>http://example.org/docs/services/</link>
      <pubDate>Tue, 02 Oct 2018 10:54:33 -0500</pubDate>
      
      <guid>http://example.org/docs/services/</guid>
      <description>Services specify actual things to monitor. The very purpose of this software. So, you&amp;rsquo;ll probably need to know about them
In the config file, Services are specified as:
 Service NAME { _data..._ }  Often, there will be no need to specify any data, and you may shorten the specification to just
 Service NAME  If you are just starting out with argus, it is recommended that you stick to the short form when possible and let argus fill in the default values.</description>
    </item>
    
    <item>
      <title>Aberrant Behavior Detection</title>
      <link>http://example.org/docs/hwab/</link>
      <pubDate>Tue, 02 Oct 2018 10:54:33 -0500</pubDate>
      
      <guid>http://example.org/docs/hwab/</guid>
      <description>Any service that has a numeric result can be checked for aberrant or unexpected values. Once enabled, argus uses the Holt-Winters algorithm to predict what the result should be, and anything outside the expected range will cause the service to be down.
to enable, configure a maxdeviation (or any severity qualified variant (eg. maxdeviation.minor))
Service UDP/SNMP { oid: ifInOctets[Gi3/0] calc: ave-rate-bits maxdeviation.minor: 2 maxdeviation.warning: 4 } by default, argus uses a seasonal period of one week, and alpha, beta, and gamma values reasonable for a week season.</description>
    </item>
    
    <item>
      <title>Access Control</title>
      <link>http://example.org/docs/acl/</link>
      <pubDate>Tue, 02 Oct 2018 10:54:33 -0500</pubDate>
      
      <guid>http://example.org/docs/acl/</guid>
      <description>In the users section we saw how to make a user a member of a set of groups. In order to control access to things, we specify which groups have access to a particular thing. If the user is a member of any of the specified groups, access is permitted.
say we have a users file entry:
Name: bob EPasswd: $2a$10$sck5WIOLGsthgyX Home: Top Groups: gibber jabber  bob now belongs to both the &amp;lsquo;gibber&amp;rsquo; and &amp;lsquo;jabber&amp;rsquo; groups.</description>
    </item>
    
    <item>
      <title>Advanced Features</title>
      <link>http://example.org/docs/advanced/</link>
      <pubDate>Tue, 02 Oct 2018 10:54:33 -0500</pubDate>
      
      <guid>http://example.org/docs/advanced/</guid>
      <description>Aliases Often, when deciding how to arrange things, it may make sense to have something in more than one place. You may have a group of &amp;ldquo;Unix Servers&amp;rdquo; containing all of your unix servers, and also a group &amp;ldquo;Web Servers&amp;rdquo; containing all of your web servers. While you could just monitor the service twice, that just seems silly.
An Alias acts much like a &amp;ldquo;symlink&amp;rdquo;, allowing the same object to appear in more than one place, but still only be monitored once.</description>
    </item>
    
    <item>
      <title>Argus Test Port</title>
      <link>http://example.org/docs/testport/</link>
      <pubDate>Tue, 02 Oct 2018 10:54:33 -0500</pubDate>
      
      <guid>http://example.org/docs/testport/</guid>
      <description>In order to remotely check that Argus is properly running, you can enable the test server on a TCP port. in your argus.conf, add:
 test_port: 3074  You should pick a port number that is not currently in use on the server argus is running on.
You can then check on it by telneting to the test port:
 telnet argus.example.com 3074 Connected to argus.example.com. Escape character is &#39;^]&#39;. Argus running Connection closed by foreign host.</description>
    </item>
    
    <item>
      <title>Database Testing</title>
      <link>http://example.org/docs/database/</link>
      <pubDate>Tue, 02 Oct 2018 10:54:33 -0500</pubDate>
      
      <guid>http://example.org/docs/database/</guid>
      <description>The syntax used for DSNs changed in version 5.0. Prior versions used perl&amp;rsquo;s syntax; while newer versions use go&amp;rsquo;s syntax.
 Configuring You will need to specify various parameters:
Service DB { dbtype: mysql dbname: mydb dbparam: tls=true user: argus pass: secret hostname: dbhost.example.com sql: SELECT COUNT(*) FROM mytable }   hostname - the hostname of the database server dbtype - type of database. currently supported: postgres, mysql, sqlserver, hdb dbname - the name of the database dbparam - any required connection parameters.</description>
    </item>
    
    <item>
      <title>Distributed Monitoring</title>
      <link>http://example.org/docs/darp/</link>
      <pubDate>Tue, 02 Oct 2018 10:54:33 -0500</pubDate>
      
      <guid>http://example.org/docs/darp/</guid>
      <description>DARP is an advanced feature. If you are just starting out with argus, it is recommended that you skip this section.
 The syntax for configuring DARP changed in version 5.0
 For increased reliability, some people may want to have multiple Argus servers monitoring their network. There are several reasons you may want to do this, and Argus DARP has several modes of operation:
 none - no redundancy, this is what you do now.</description>
    </item>
    
    <item>
      <title>Extended Testing</title>
      <link>http://example.org/docs/xtservices/</link>
      <pubDate>Tue, 02 Oct 2018 10:54:33 -0500</pubDate>
      
      <guid>http://example.org/docs/xtservices/</guid>
      <description>Extended testing is an advanced feature. If you are just starting out with argus it is recommended that you stick to the standard built-in service tests as described in services
 Most services (those places where it makes sense) can do various comparisons on the service&amp;rsquo;s result:
 expect - a regular expression to expect nexpect - a regular expression to not expect eqvalue - value must be equal to this nevalue - value must not be equal to this minvalue - value must be this or more maxvalue - value must be this or less  There are also several pre-processing and calculations that can be performed before testing</description>
    </item>
    
    <item>
      <title>Notifications</title>
      <link>http://example.org/docs/notif/</link>
      <pubDate>Tue, 02 Oct 2018 10:54:33 -0500</pubDate>
      
      <guid>http://example.org/docs/notif/</guid>
      <description>Whenever something changes state, Argus can notify someone about it.
Argus realizes that in the real world, sometimes people forget, they go out of range of their paging service, their batteries die, etc. So, by default, when Argus wants to be sure someone knows about something it will require that the message be acknowledged and will resend and/or escalate until someone does.
Configuring To specify where to send notifications:</description>
    </item>
    
    <item>
      <title>Overrides</title>
      <link>http://example.org/docs/override/</link>
      <pubDate>Tue, 02 Oct 2018 10:54:33 -0500</pubDate>
      
      <guid>http://example.org/docs/override/</guid>
      <description>Everyone knows that Red = Bad. Two people working to fix the same thing is also bad. An override is a way of saying &amp;ldquo;I know it is down&amp;rdquo; or &amp;ldquo;I&amp;rsquo;m working on it&amp;rdquo;.
Overrides are typically used in the 2 following ways:
 When someone discovers something is down, they will place an override on the item letting their co-workers know that someone is fixing the problem, and also to make it not red (so that management doesn&amp;rsquo;t storm on over wondering why there is red).</description>
    </item>
    
    <item>
      <title>Remote Agent</title>
      <link>http://example.org/docs/agent/</link>
      <pubDate>Tue, 02 Oct 2018 10:54:33 -0500</pubDate>
      
      <guid>http://example.org/docs/agent/</guid>
      <description>Argus can monitor various systems and parameters on other servers via an agent
Configuring Argus The agent can gather all sorts of information on all sorts of subsystems on all sorts of Operating Systems. Except for yours. It works for most people, but for you, you might need to play around a bit. Just sayin&amp;rsquo;.
Somewhere at the top of your config, tell argus what port you configured the agent to use (164 in the example above):</description>
    </item>
    
    <item>
      <title>Testing Argus</title>
      <link>http://example.org/docs/self/</link>
      <pubDate>Tue, 02 Oct 2018 10:54:33 -0500</pubDate>
      
      <guid>http://example.org/docs/self/</guid>
      <description>Performance testing is an advanced feature. If you are just starting out with argus it is recommended that you hit your back button and skip this until you are more familiar with using Argus.
 As you use argus for some time, and add more and more things to be monitored, it is natural to wonder how well argus can handle the number of things you are throwing at it, or whether it is time to upgrade to a faster server.</description>
    </item>
    
    <item>
      <title>Testing DNS</title>
      <link>http://example.org/docs/dns/</link>
      <pubDate>Tue, 02 Oct 2018 10:54:33 -0500</pubDate>
      
      <guid>http://example.org/docs/dns/</guid>
      <description>Extended DNS testing is an advanced feature. If you are just starting out with argus, or are not familiar with the inner workings of DNS [RFC 1035], it is recommended that you stick to the standard built-in DNS tests as described in services
 It seems that there is no end to the creativity of people mis-configuring DNS servers, or the number of failure modes that exist in DNS servers.</description>
    </item>
    
    <item>
      <title>Ticket System</title>
      <link>http://example.org/docs/tktsys/</link>
      <pubDate>Tue, 02 Oct 2018 10:54:33 -0500</pubDate>
      
      <guid>http://example.org/docs/tktsys/</guid>
      <description>Argus can attach overrides to your trouble ticket system, in order to:
 make sure something isn&amp;rsquo;t overridden without opening a trouble ticket remove an override once a ticket is closed   tkt_check_url the url to check the status of a ticket. TICKET will be replaced with the ticket number.
eg. http://tkt.example.com/tktview?t=TICKET tkt_check_expect a string that will be returned if the ticket is open.
eg. OPEN tkt_view_url the url to view a ticket.</description>
    </item>
    
    <item>
      <title>Troubleshooting</title>
      <link>http://example.org/docs/troubleshooting/</link>
      <pubDate>Tue, 02 Oct 2018 10:54:33 -0500</pubDate>
      
      <guid>http://example.org/docs/troubleshooting/</guid>
      <description>At some point you may wonder why Argus thinks something is down or up (perhaps you tested it manually and you disagree), or why argus is doing such-and-such instead of other-such.
The debugging page contains all sorts of information about the object in question, some of which may be useful for a tech to troubleshoot issues (but beware, this is no place for a PHB).
The meaning of some of the information will be obvious from its name or from reading the configuration documentation, some won&amp;rsquo;t be obvious.</description>
    </item>
    
    <item>
      <title>Web Pages</title>
      <link>http://example.org/docs/webpretty/</link>
      <pubDate>Tue, 02 Oct 2018 10:54:33 -0500</pubDate>
      
      <guid>http://example.org/docs/webpretty/</guid>
      <description>You can adjust the look of the web pages in numerous ways. The most commonly used parameters are:
You can add text or html to the top and bottom of web pages. Typically, these are set once at the top of the monitoring config to customize the look of pages site-wide.
 header - text or html to be placed at the top of web pages footer - text or html to be placed at the bottom of web pages header_branding - text or html to be placed at the top of web pages, typically a company name or logo login_notice - text or html placed on the login page, such as a link to a privacy policy   header_branding: YoyoDyne Inc - internal use only login_notice: We use &amp;lt;a href=policy&amp;gt;cookies&amp;lt;a&amp;gt;  There are several fields that can be used for general informational purposes.</description>
    </item>
    
  </channel>
</rss>